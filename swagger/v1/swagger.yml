openapi: 3.0.3
info:
  title: Films API
  description: API for user authentication and film management
  version: 1.0.0
servers:
  - url: http://3.90.146.14/api/v1
paths:
  /signup:
    post:
      tags:
        - users
      summary: Sign up a new user
      operationId: signupUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
                password_confirmation:
                  type: string
                  example: password123
              required:
                - name
                - email
                - password
                - password_confirmation
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User created successfully
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["Email has already been taken"]

  /signin:
    post:
      tags:
        - users
      summary: Sign in a user
      operationId: signinUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        '200':
          description: Successfully signed in
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: john.doe@example.com
                  token:
                    type: string
                    example: JWT_TOKEN
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: Invalid email or password

  /films:
    post:
      tags:
        - Films
      summary: Create a new film
      operationId: createFilm
      parameters:
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: true
          schema:
            type: string
            example: "Bearer YOUR_TOKEN_HERE"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: The Great Film
                publishing_year:
                  type: integer
                  example: 2024
                poster:
                  type: string
                  example: http://example.com/poster.jpg
              required:
                - title
                - publishing_year
      responses:
        '200':
          description: Film created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: The Great Film
                  publishing_year:
                    type: integer
                    example: 2024
                  poster:
                    type: string
                    example: http://example.com/poster.jpg
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["Title can't be blank"]

  /films/{id}:
    get:
      tags:
        - Films
      summary: Retrieve a film by ID
      operationId: getFilmById
      parameters:
        - name: id
          in: path
          description: Film ID
          required: true
          schema:
            type: integer
            example: 1
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: true
          schema:
            type: string
            example: "Bearer YOUR_TOKEN_HERE"
      responses:
        '200':
          description: Successfully retrieved film
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: The Great Film
                  publishing_year:
                    type: integer
                    example: 2024
                  poster:
                    type: string
                    example: http://example.com/poster.jpg
        '404':
          description: Film not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Film not found

    put:
      tags:
        - Films
      summary: Update a film
      operationId: updateFilm
      parameters:
        - name: id
          in: path
          description: Film ID
          required: true
          schema:
            type: integer
            example: 1
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: true
          schema:
            type: string
            example: "Bearer YOUR_TOKEN_HERE"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: The Great Film
                publishing_year:
                  type: integer
                  example: 2024
                poster:
                  type: string
                  example: http://example.com/poster.jpg
      responses:
        '200':
          description: Successfully updated film
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: The Great Film Updated
                  publishing_year:
                    type: integer
                    example: 2025
                  poster:
                    type: string
                    example: http://example.com/updated_poster.jpg
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["Title can't be blank"]
        '404':
          description: Film not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Film not found

  /films/:
    get:
      tags:
        - Films
      summary: List all films (alternative endpoint)
      operationId: getAllFilms
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          description: Number of films per page
          required: false
          schema:
            type: integer
            example: 8
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: true
          schema:
            type: string
            example: "Bearer YOUR_TOKEN_HERE"
      responses:
        '200':
          description: Successfully retrieved films
          content:
            application/json:
              schema:
                type: object
                properties:
                  films:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: The Great Film
                        publishing_year:
                          type: integer
                          example: 2024
                        poster:
                          type: string
                          example: http://example.com/poster.jpg
                  meta:
                    type: object
                    properties:
                      total_pages:
                        type: integer
                        example: 5
                      current_page:
                        type: integer
                        example: 1
                      next_page:
                        type: integer
                        example: 2
                      previous_page:
                        type: integer
                        example: null

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
